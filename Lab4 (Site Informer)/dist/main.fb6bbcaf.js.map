{"version":3,"sources":["js/main.js"],"names":["api","key","baseurl1","search_box","document","querySelector","addEventListener","setQuery","event","keyCode","getResults","value","console","log","query","fetch","then","weather","json","displayResults","city","innerHTML","name","sys","country","now","Date","date","dateBuilder","temp","Math","round","main","weather_ico","icon","desc","description","weather_el","innerText","humidity","hi_low","temp_min","temp_max","dt","days","months","day","getDay","getDate","month","getMonth","year","getFullYear","url3","res3","response","r"],"mappings":"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","file":"main.fb6bbcaf.js","sourceRoot":"..\\src","sourcesContent":["// OpenWeather Source\r\nconst api = {\r\n  key: \"2a11a1d5bd46885d6d9b3a2da86d6b8a\",\r\n  baseurl1: \"http://api.openweathermap.org/data/2.5/\"\r\n}\r\n\r\nconst search_box = document.querySelector('.search-box');\r\nsearch_box.addEventListener('keypress', setQuery);\r\n\r\nfunction setQuery(event) {\r\n  if (event.keyCode == 13) {\r\n    getResults(search_box.value);\r\n    console.log(search_box.value);\r\n  }\r\n}\r\n\r\nfunction getResults (query) \r\n{\r\n  fetch(`${api.baseurl1}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n  .then(weather => {\r\n    return weather.json();\r\n}).then(displayResults);\r\n}\r\n\r\nfunction displayResults (weather) \r\n{\r\n  console.log(weather);\r\n\r\n  let city = document.querySelector('.location .city');\r\n  city.innerHTML = `${weather.name}, ${weather.sys.country}`;\r\n\r\n  let now = new Date();\r\n  let date = document.querySelector('.location .date');\r\n  date.innerHTML = dateBuilder(now);\r\n\r\n  let temp = document.querySelector('.current .temp');\r\n  temp.innerHTML = `${Math.round(weather.main.temp)}<span>°C</span>`;\r\n\r\n  let weather_ico = document.querySelector('.current .weather-ico');\r\n  weather_ico.innerHTML = \"<img width='75px'src='http://openweathermap.org/img/w/\"+weather.weather[0].icon+\".png'>\";\r\n\r\n  let desc = document.querySelector('.current .description');\r\n  desc.innerHTML = \"Description: \" + weather.weather[0].description;\r\n\r\n  let weather_el = document.querySelector('.current .weather');\r\n  weather_el.innerText = weather.weather[0].main;\r\n\r\n  let humidity = document.querySelector('.humidity');\r\n  humidity.innerHTML = `Humidity: ${weather.main.humidity}%`;\r\n\r\n  let hi_low = document.querySelector('.hi-low');\r\n  hi_low.innerHTML = \r\n  `Feels like between ${Math.round(weather.main.temp_min)}°C / ${Math.round(weather.main.temp_max)}°C`;\r\n}\r\n\r\nfunction dateBuilder (dt) \r\n{\r\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  let day = days[dt.getDay()];\r\n  let date = dt.getDate();\r\n  let month = months[dt.getMonth()];\r\n  let year = dt.getFullYear();\r\n\r\n  return `${day} ${date} ${month} ${year}`;\r\n}\r\n\r\n\r\n// JSONplaceholder source\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Local Source\r\nconst url3 = \"data.json\"\r\n\r\nlet res3\r\n\r\nfetch(url3)\r\n.then(response => response.json())\r\n.then(r => {\r\n  res3 = r;\r\n  console.log(res3)\r\n})"]}